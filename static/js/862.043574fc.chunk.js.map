{"version":3,"file":"static/js/862.043574fc.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Contacts/Contacts.styled.jsx","redux/contacts/selectors.js","components/Contacts/Contacts.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\npadding 20px`;\n\nexport const FormField = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  align-content: flex-start;\n`;\n\nexport const Field = styled.input`\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  padding: 10px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 4px;\n`;\n\nexport const FormButton = styled.button`\n  display: block;\n  margin: 25px auto auto;\n  width: 180px;\n  height: 35px;\n  border-radius: 4px;\n  border: transparent;\n  color: #fff;\n  background-color: #4f8bba;\n  font-weight: 700;\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n`;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  padding: 2px 20px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n\n  :nth-child(even) {\n background-color: #d8e8ee;\n`;\n\nexport const ContactNumber = styled.a`\n  padding: 0 20px;\n  font-weight: 500;\n  color: #2f2d2d;\n  text-decoration: none;\n`;\n\nexport const FilterButton = styled.button`\n  margin-left: auto;\n  width: 70px;\n  height: 25px;\n  border-radius: 4px;\n  border: transparent;\n  color: #fff;\n  background-color: #4f8bba;\n  font-weight: 700;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const visibleContacts = contacts\n      ?.filter(contact => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase());\n      })\n      .sort(function (a, b) {\n        const nameA = a.name.toLowerCase(),\n          nameB = b.name.toLowerCase();\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n    return visibleContacts;\n  }\n);\n","import { ContactItem, ContactNumber, FilterButton } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectVisibleContacts);\n\n  const deleteContactHandler = id => {\n    dispatch(deleteContact(id));\n    Notify.info('Сontact deleted successfully', {\n      cssAnimationStyle: 'from-top',\n      position: 'center-top',\n    });\n  };\n\n  return (\n    <ul>\n      {contacts?.map(contact => {\n        return (\n          <ContactItem key={contact.id}>\n            {contact.name}:{' '}\n            <ContactNumber href={`tel:${contact.number}`}>\n              {contact.number}\n            </ContactNumber>{' '}\n            <FilterButton\n              type=\"button\"\n              onClick={() => deleteContactHandler(contact.id)}\n            >\n              Delete\n            </FilterButton>\n          </ContactItem>\n        );\n      })}\n    </ul>\n  );\n};\n","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { nanoid } from 'nanoid';\nimport {\n  Field,\n  FormField,\n  Label,\n  FormButton,\n  ErrorText,\n  Form,\n} from './Form.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    resetField,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    delayError: 500,\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n  });\n\n  const formSubmitHandler = newContact => {\n    const normalizedName = newContact.name.toLowerCase();\n\n    const checkNewContact = contacts?.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (checkNewContact) {\n      Notify.info(`${newContact.name} is already in contacts`, {\n        cssAnimationStyle: 'from-top',\n        position: 'center-center',\n      });\n    } else {\n      dispatch(addContact(newContact));\n\n      Notify.success(`${newContact.name} successfully added`, {\n        cssAnimationStyle: 'from-top',\n        position: 'center-top',\n      });\n    }\n    resetField('name');\n    resetField('number');\n  };\n\n  return (\n    <Form\n      onSubmit={handleSubmit(newContact => {\n        formSubmitHandler(newContact);\n      })}\n    >\n      <FormField>\n        <Label htmlFor={nameId}>Name</Label>\n        <Field\n          type=\"text\"\n          {...register('name', {\n            required: 'This is required',\n            maxLength: { value: 30, message: 'Max length is 30' },\n            pattern: {\n              value:\n                /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n              message:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            },\n          })}\n          id={nameId}\n        />\n        <ErrorText>{errors.name?.message}</ErrorText>\n      </FormField>\n      <FormField>\n        <Label htmlFor={numberId}>Number </Label>\n        <Field\n          type=\"tel\"\n          {...register('number', {\n            required: 'This is required',\n            maxLength: { value: 13, message: 'Max length is 13' },\n            pattern: {\n              value:\n                /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n              message:\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            },\n          })}\n          id={numberId}\n        />\n        <ErrorText>{errors.number?.message}</ErrorText>\n      </FormField>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterField = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  align-content: flex-start;\n  padding: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  margin-bottom: 4px;\n`;\n\nexport const FilterInput = styled.input`\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  padding: 10px;\n`;\n","import { FilterField, FilterLabel, FilterInput } from './Filter.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = value => dispatch(filterContacts(value));\n\n  return (\n    <FilterField>\n      <FilterLabel>Find contacts by name </FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"name\"\n        onChange={event => handleFilterChange(event.currentTarget.value.trim())}\n      />\n    </FilterField>\n  );\n};\n\nexport default Filter;\n","import { Contacts } from '../components/Contacts/Contacts';\nimport { ContactForm } from '../components/Form/Form';\nimport Filter from '../components/Filter/Filter';\nimport { ContactsMassage } from '../components/App.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Loader from '../components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoading && <Loader />}{' '}\n      {contacts?.length > 0 ? (\n        !error && (\n          <>\n            <Filter />\n            <Contacts />\n          </>\n        )\n      ) : (\n        <ContactsMassage>\n          Your phonebook is empty, add your first contact\n        </ContactsMassage>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormField","Field","Label","FormButton","ErrorText","ContactItem","ContactNumber","FilterButton","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","sort","a","b","nameA","nameB","Contacts","dispatch","useDispatch","useSelector","map","href","number","type","onClick","id","deleteContact","Notify","cssAnimationStyle","position","nameId","nanoid","numberId","ContactForm","useForm","delayError","defaultValues","register","resetField","handleSubmit","errors","formState","onSubmit","newContact","normalizedName","some","addContact","formSubmitHandler","htmlFor","required","maxLength","value","message","pattern","FilterField","FilterLabel","FilterInput","onChange","event","currentTarget","trim","filterContacts","useEffect","fetchContacts","Loader","length"],"sourceRoot":""}